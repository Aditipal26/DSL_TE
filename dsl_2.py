# -*- coding: utf-8 -*-
"""DSL-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hgeb38ZM6eA0R2rgKm1el1d-e-5dVWrg
"""

import pandas as pd
df=pd.read_csv('/netflix1.csv')
df

df.shape

"""The DataFrame. shape attribute in Pandas enables us to obtain the shape of a DataFrame. For example, if a DataFrame has a shape of (80, 10) , this implies that the DataFrame is made up of 80 rows and 10 columns of data."""

df.isnull().sum()

"""The function dataframe. isnull(). sum(). sum() returns the number of missing values in the dataset.
In DataFrame sometimes many datasets simply arrive with missing data, either because it exists and was not collected or it never existed. data is represented by two value:

None: None is a Python singleton object that is often used for missing data in Python code.
NaN : NaN (an acronym for Not a Number), is a special floating-point value recognized by all systems that use the standard IEEE floating-point representation
"""

df.duplicated().sum()

"""The duplicated() method returns a Series with True and False values that describe which rows in the DataFrame are duplicated and not. You can count duplicates in pandas DataFrame by using DataFrame. pivot_table() function. This function counts the number of duplicate entries in a single column, multiple columns, and count duplicates when having NaN values in the DataFrame."""

df.loc[df.duplicated()]

"""loc[df.duplicated(), :]
loc can take a boolean Series and filter data based on True and False . The first argument df. duplicated() will find the rows that were identified by duplicated() . The second argument : will display all columns.
"""

df.drop_duplicates(inplace=True)

df.duplicated().sum()

df.isnull().sum()

df.dropna()

df.fillna(df['title'].mean,inplace=True)
df.fillna(df['director'].mean,inplace=True)

df.isnull().sum()

df.describe()

import pandas as pd
pd.crosstab(index=df['title'].head(10),columns=df['director'].head(10))

pd.crosstab(index=df['title'].head(10),columns=df['director'].head(10),margins=True)

import matplotlib.pyplot as plt

plt.hist(df['title'].head(10), bins=20)
plt.title('How to plot a simple histogram',fontsize=10) //spilt_adjust

agg=df.groupby(['title','director']).sum().unstack().fillna(0)
agg

import seaborn as sns
sns.histplot(df['director'].head(10), bins=20,kde=True)